# .github/workflows/TestWorkflow.yml
name: Render and Append Test Template

# 1) Grant write permissions to the workflow so it can push changes
permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      resource_name:
        description: 'Internal Terraform resource name (e.g. my_share)'
        required: true
      resource_attribute_name:
        description: 'Value for the resource "name" attribute (e.g. my_share)'
        required: true

jobs:
  render-and-append:
    runs-on: ubuntu-latest
    steps:
      # 2) Checkout the repository with the built-in GITHUB_TOKEN
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      # 3) Install Jinja2 CLI for template rendering
      - name: Install Jinja2 CLI
        run: |
          python3 -m pip install --upgrade pip
          pip3 install jinja2-cli

      # 4) Render the template and append the result to test.tf
      - name: Render and append test.tf.j2
        run: |
          jinja2 .github/workflows/templates/test.tf.j2 \
            -D resource_name="${{ github.event.inputs.resource_name }}" \
            -D resource_attribute_name="${{ github.event.inputs.resource_attribute_name }}" \
            >> test.tf

      # 5) Commit & push the updated test.tf back to the repo
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add test.tf
          # Only commit if there are staged changes
          git diff --cached --quiet || git commit -m "ci: auto-append test.tf (${{ github.event.inputs.resource_name }})"
          git push

      # 6) (Optional) Show the first 20 lines for quick verification
      - name: Show beginning of test.tf
        run: head -n 20 test.tf
